openapi: '3.0.3'
info:
  title: Shopify - Abandoned Cart Feature
  version: '1.0'
servers:
  - url: API URL
tags: 
- name: Authorization
  description: User related endpoints
- name: Store
  description: Store related endpoints
- name: Product
  description: Product related endpoints
- name: Customer
  description: Customer related endpoints
- name: Order
  description: Order related endpoints
- name: Abandoned Cart
  description: Abandoned cart related endpoint


paths:
  /user/login:
    post:
      tags: [Authorization]
      summary: Login to receive a JWT token
      parameters:
        - name: email
          in: header
          description: The email used to sign up
          schema:
            type: string
          required: True
        - name: password
          in: header
          description: password matching registered email
          schema:
            type: string
          required: True
      responses:
        '200':
          description: OK
        '400':
          description: Incorrect username or password

  /user/register:
    post:
      tags: [Authorization]
      summary: registering a new user
      parameters:
        - name: email
          in: header
          description: email to register
          schema:
            type: string
          required: True
        - name: password
          in: header
          description: setting a password for email given
          schema:
            type: string
          required: True
      responses:
        '200':
          description: OK
        '400':
          description: Email already in use

  /store:
    get:
      tags: [Store]
      summary: Index of all Stores
      responses:
        '200':
          description: OK
    post:
      tags: [Store]
      summary: Create a new Store
      responses:
        '200':
          description: OK
  /store/{storeID}:
    put:
      tags: [Store]
      summary: Update a Store
      responses:
        '200':
          description: OK
    delete:
      tags: [Store]
      summary: Delete a Store
      responses:
        '200':
          description: OK    

  /{storeID}/product:
    get:
      tags: [Product]
      summary: Index of all products
      responses:
        '200':
          description: OK
    post:
      tags: [Product]
      summary: Create a new product
      responses:
        '200':
          description: OK
  /{storeID}/product/{productID}:
    put:
      tags: [Product]
      summary: Update a product
      parameters:
        - name: id
          in: header
          description: id of the product to be updated
          schema:
            type: integer
          required: True
        - name: title
          in: header
          description: title of the product to be updated
          schema:
            type: string
          required: True
        - name: price
          in: header
          description: price of the product to be updated
          schema:
            type: number
      responses:
        '200':
          description: OK
    delete:
      tags: [Product]
      summary: Delete a product
      parameters:
        - name: id
          in: header
          description: id of the product to be deleted
          schema:
            type: integer
      responses:
        '200':
          description: OK

  /{storeID}/customer/:
    get:
      tags: [Customer]
      summary: Index of all customers
      responses:
        '200':
          description: OK
    post:
      tags: [Customer]
      summary: Create a new customer
      responses:
        '200':
          description: OK
  /{storeID}/customer/{customerID}:
    put:
      tags: [Customer]
      summary: Update a customer
      responses:
        '200':
          description: OK
    delete:
      tags: [Customer]
      summary: Delete a customer
      responses:
        '200':
          description: OK

  /{storeID}/order/:
    get:
      tags: [Order]
      summary: Index of all orders
      responses:
        '200':
          description: OK
  /{storeID}/order/{customerID}:
    post:
      tags: [Order]
      summary: Create a new order
      responses:
        '200':
          description: OK
  /{storeID}/order/checkout/{orderID}:
    put:
      tags: [Order]
      summary: Checkout a order
      responses:
        '200':
          description: OK
  /{storeID}/order/delete/{orderID}:
    delete:
      tags: [Order]
      summary: Delete a order
      responses:
        '200':
          description: OK
  /{storeID}/order/sum:
    get:
      tags: [Order]
      summary: get a sum of product prices for all order_placed=True for store
      responses:
        '200':
          description: OK
  /{storeID}/order/abandoned:
    get:
      tags: [Abandoned Cart]
      summary: Index all orders with order_placed=False for store
      responses:
        '200':
          description: OK